This file contains some useful commands for testing things out :)

DSMF:

sudo lxc exec DSMF1 -- curl -X 'PUT' \
  'http://localhost:8081/v1/tunnel_reservation?auth=token' \
  -H 'accept: */*' \
  -H 'Content-Type: application/json' \
  -d '{
  "tunnel_id": 0,
  "min_rate": 10000,
  "max_rate": 100000,
  "burst_rate": 100000,
  "latency": 0,
  "fr": {
    "ip": "10.0.0.4",
    "port": 873,
    "name": "vpn1",
    "network": "net1"
  },
  "to": {
    "ip": "10.0.0.6",
    "port": 874,
    "name": "vpn2",
    "network": "net2"
  },
  "private_key": "SP06+AC4NyLXJF7ctLa9ZbJqrcST7JGiksOnfafuYXY=",
  "public_key": "sfxNcDVY7LijUQZR80hvngNDCqUlgfTQL9xrNVRpzDU="
}' -v

sudo lxc exec DSMF1 -- curl -X 'PUT' \
  'http://localhost:8081/v1/tunnel_deployment?auth=token&tunnel_id=0' \
  -H 'accept: */*' -v

sudo lxc exec DSMF1 -- curl -X 'PUT' \
  'http://localhost:8081/v1/slice_reservation?auth=token' \
  -H 'accept: */*' \
  -H 'Content-Type: application/json' \
  -d '{
  "slice_id": 0,
  "min_rate": 10000,
  "max_rate": 100000,
  "burst_rate": 100000,
  "latency": 0,
  "tunnel_id": 0,
  "transport_protocol": "UDP",
  "fr": {
    "ip": "10.0.0.2",
    "port": 0,
    "name": "h1",
    "network": "net1"
  },
  "to": {
    "ip": "10.0.0.8",
    "port": 888,
    "name": "h2",
    "network": "net2"
  }
}' -v

sudo lxc exec DSMF1 -- curl -X 'PUT' \
  'http://localhost:8081/v1/slice_deployment?auth=token&slice_id=0' \
  -H 'accept: */*' -v



sudo lxc exec DSMF1 -- curl -X 'DELETE' \
  'http://localhost:8081/v1/slice_deployment?auth=token&slice_id=0' \
  -H 'accept: */*' -v

sudo lxc exec DSMF1 -- curl -X 'DELETE' \
  'http://localhost:8081/v1/tunnel_deployment?auth=token&tunnel_id=0' \
  -H 'accept: */*' -v

VPN1:

sudo lxc exec vpn1 -- curl -X 'PUT' \
  'http://localhost:8083/v1/tunnel_entry?auth=token' \
  -H 'accept: */*' \
  -H 'Content-Type: application/json' \
  -d '{
  "tunnel_entry_id": 0,
  "inner_subnet": "10.0.0.0/24",
  "local_port": 783,
  "remote_end": "10.0.0.6:784",
  "private_key": "SP06+AC4NyLXJF7ctLa9ZbJqrcST7JGiksOnfafuYXY=",
  "public_key": "sfxNcDVY7LijUQZR80hvngNDCqUlgfTQL9xrNVRpzDU=",
  "matches": [
    {
      "transport_protocol": "UDP",
      "source_port": 0,
      "target_port": 784
    }
  ]
}' -v

sudo lxc exec vpn1 -- curl -X 'DELETE' \
  'http://localhost:8083/v1/tunnel_entry?auth=token&tunnel_entry_id=0' \
  -H 'accept: */*' -v


ESMF:

sudo lxc exec ESMF1 -- curl -X 'PUT' \
  'http://localhost:8080/v1/slice?auth=token' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '[
{
  "slice_id": 0,
  "min_rate": 10000,
  "max_rate": 100000,
  "burst_rate": 100000,
  "latency": 3,
  "tunnel_id": 0,
  "transport_protocol": "UDP",
  "fr": {
    "ip": "10.0.0.2",
    "port": 0,
    "name": "h1",
    "network": "net1"
  },
  "to": {
    "ip": "10.0.0.8",
    "port": 888,
    "name": "h2",
    "network": "net2"
  }
}
]' -v


sudo lxc exec ESMF1 -- curl -X 'DELETE' \
  'http://localhost:8080/v1/slice?auth=token&slice_ids=1000' \
  -H 'accept: */*' -v


h1:

import socket
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
while True: sock.sendto(bytes("It finally works! :)", "utf-8"), ("10.0.0.8", 888))


h2:

import socket

UDP_IP = "0.0.0.0"
UDP_PORT = 888

sock = socket.socket(socket.AF_INET, # Internet
                    socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))

while True:
    data, addr = sock.recvfrom(1024) # buffer size is 1024 bytes
    print("received message: %s" % data)


Resulting network packets: MPLS (TUN) > ETH > IP > UDP > ETH > IP > GREv0 > MPLS (SLICE) > ETH > IP > UDP
                          |---MPLS----|---Wireguard----|------GRETAP------|-----MPLS-----|----UDP/TCP----|