{
  "openapi": "3.0.3",
  "info": {
    "title": "DTMF",
    "description": "A simple API to interact with the Domain Tunnel Management Function. Supports reserving, creating and removing tunnels from one external domain to another external domain. This service does not create tunnel endpoints, but reserves resources instead in the current domain instead. The DTMF is a subset of the DSMF. Please refer to the topology drawings for further information about the network structures.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{protocol}://{apiRoot}/v1",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "apiRoot": {
          "default": "localhost:8081",
          "description": "The server to use"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "tunnel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The tunnel identifier"
          },
          "min_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The minimum transmission rate as bits/s"
          },
          "max_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum transmission rate as bits/s"
          },
          "burst_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The burst transmission rate as bits/s"
          },
          "latency": {
            "type": "integer",
            "format": "int16",
            "description": "The required maximum latency"
          },
          "from": {
            "type": "string",
            "description": "The name of the input domain or host"
          },
          "to": {
            "type": "string",
            "description": "The name of the output domain or host"
          }
        }
      }
    }
  },
  "paths": {
    "/auth": {
      "summary": "Manages authentication towards this service",
      "description": "Endpoint to manage authentication tokens",
      "post": {
        "tags": ["Authentication"],
        "description": "Issues a new authentication token in exchange for credentials. Currently requires no credentials, this is up to future implementations.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "The authentication token as string",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Wrong credentials were specified"
          }
        }
      }
    },
    "/tunnel_reservation": {
      "summary": "Manages tunnel reservations on the current domain",
      "description": "Endpoint to manage tunnel reservations",
      "get": {
        "tags": ["Tunnel Reservation"],
        "description": "Lists all current tunnel reservations",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnel reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": ["Tunnel Reservation"],
        "description": "Creates a new tunnel reservation or stages changes to an existing deployed tunnel, as long as source and target of the tunnel match.",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The tunnel to reserve. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tunnel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tunnel has been reserved"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The input or output could not be found"
          },
          "409": {
            "description": "A tunnel with this id is already known and does not match current source and target"
          },
          "507": {
            "description": "Insufficient resources"
          }
        }
      },
      "delete": {
        "tags": ["Tunnel Reservation"],
        "description": "Deletes a tunnel reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel reservation to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel reservation was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          }
        }
      }
    },
    "/tunnel_deployment": {
      "summary": "Manages tunnels on the current domain",
      "description": "Endpoint to manage tunnels",
      "get": {
        "tags": ["Tunnel Management"],
        "description": "Lists all current tunnels",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": ["Tunnel Management"],
        "description": "Creates a new tunnel or modifies a tunnel from a reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The tunnel to create from the corresponding reservation id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel has been created"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      },
      "delete": {
        "tags": ["Tunnel Management"],
        "description": "Deletes a tunnel",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel could not be found."
          }
        }
      }
    }
  }
}
