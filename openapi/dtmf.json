{
  "openapi": "3.0.3",
  "info": {
    "title": "DTMF",
    "description": "A simple API to interact with the Domain Tunnel Management Function. Supports reserving, creating and removing tunnels from one external domain to another external domain. This service does not create tunnel endpoints, but reserves resources instead in the current domain instead. The DTMF is a subset of the DSMF. Please refer to the topology drawings for further information about the network structures.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{protocol}://{apiRoot}/v1",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "apiRoot": {
          "default": "localhost:8081",
          "description": "The server to use"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "tunnel": {
        "type": "object",
        "properties": {
          "tunnel_id": {
            "type": "integer",
            "format": "int32",
            "description": "The tunnel identifier"
          },
          "min_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The minimum transmission rate as bits/s"
          },
          "max_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum transmission rate as bits/s"
          },
          "burst_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The burst transmission rate as bits/s"
          },
          "latency": {
            "type": "integer",
            "format": "int16",
            "description": "The required maximum latency"
          },
          "fr": {
            "$ref": "#/components/schemas/endpoint"
          },
          "to": {
            "$ref": "#/components/schemas/endpoint"
          },
          "private_key": {
            "type": "string",
            "description": "The tunnel private key"
          },
          "public_key": {
            "type": "string",
            "description": "The tunnel public key (of the other side)"
          }
        }
      },
      "endpoint": {
        "type": "object",
        "description": "Specifying an endpoint to be matched for source or target",
        "properties": {
          "ip": {
            "type": "string",
            "description": "Specifies the source or target ip to be matched. Leave empty for no matching.",
            "default": null
          },
          "port": {
            "type": "integer",
            "format": "i16",
            "description": "Specifies the source or target port to be matched. Leave empty or on 0 for no matching.",
            "default": 0
          },
          "name": {
            "type": "string",
            "description": "Specifies the name of this entry to look up in our configuration.",
            "default": null
          },
          "network": {
            "type": "string",
            "description": "Specifies the network name of this endpoint.",
            "default": null
          }
        }
      },
      "domain_configuration": {
        "type": "object",
        "description": "The configuration for this service",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "DSMF",
              "DTMF"
            ],
            "description": "The service type to be used"
          },
          "network": {
            "type": "string",
            "description": "Our network name"
          },
          "controllers": {
            "type": "array",
            "description": "Specifies the controllers available to us",
            "items": {
              "$ref": "#/components/schemas/controller_configuration"
            }
          },
          "vpn_gateways": {
            "type": "array",
            "description": "The vpn gateways known to us",
            "items": {
              "$ref": "#/components/schemas/device_configuration"
            }
          },
          "switches": {
            "type": "array",
            "description": "The switches known to us",
            "items": {
              "$ref": "#/components/schemas/device_configuration"
            }
          },
          "network_borders": {
            "type": "array",
            "description": "The routes to other networks known to us",
            "items": {
              "$ref": "#/components/schemas/network_border_configuration"
            }
          },
          "networks": {
            "type": "array",
            "description": "The other networks known to us",
            "items": {
              "$ref": "#/components/schemas/network_configuration"
            }
          },
          "reservable_bitrate": {
            "type": "integer",
            "format": "i64",
            "description": "The bitrate that can be reserved by hosts on our network",
            "default": 1000000000
          }
        }
      },
      "controller_configuration": {
        "type": "object",
        "description": "A controller configuration element",
        "properties": {
          "ip": {
            "type": "string",
            "description": "The ip or name the controller can be reached on",
            "default": "localhost"
          },
          "port": {
            "type": "integer",
            "format": "i16",
            "description": "The port that the controller REST API can be reached on",
            "default": 8080
          },
          "name": {
            "type": "string",
            "description": "The name of this controller"
          }
        }
      },
      "device_configuration": {
        "type": "object",
        "description": "A device/switch configuration element",
        "properties": {
          "ip": {
            "type": "string",
            "description": "The ip or name the device can be reached on",
            "default": "localhost"
          },
          "port": {
            "type": "integer",
            "format": "i16",
            "description": "The port that the device REST API can be reached on",
            "default": 8082
          },
          "connections": {
            "type": "array",
            "description": "The (relevant) interface definitions for this device",
            "items": {
              "$ref": "#/components/schemas/connection_configuration"
            }
          },
          "network": {
            "type": "string",
            "description": "The network name this device is assigned to"
          },
          "name": {
            "type": "string",
            "description": "The name of the device"
          },
          "dpid": {
            "type": "integer",
            "format": "i64",
            "description": "The datapath id in case this is a switch"
          }
        }
      },
      "network_border_configuration": {
        "type": "object",
        "description": "A network border configuration element (telling us where to route traffic to when wanting to reach a different network)",
        "properties": {
          "network_name": {
            "type": "string",
            "description": "The network this border leads to"
          },
          "device_name": {
            "type": "string",
            "description": "The name of the device that has a direct connection to the other network (our side)"
          },
          "device_type": {
            "type": "string",
            "enum": [
              "SWITCH",
              "VPN",
              "HOST"
            ],
            "description": "The type of the remote device"
          },
          "connection": {
            "$ref": "#/components/schemas/connection_configuration"
          }
        }
      },
      "connection_configuration": {
        "type": "object",
        "description": "A connection configuration element",
        "properties": {
          "intf_name": {
            "type": "string",
            "description": "The name of the interface on a switch"
          },
          "intf_id": {
            "type": "integer",
            "format": "i16",
            "description": "The id of the interface"
          },
          "other_end": {
            "type": "string",
            "description": "The name of the device on the other side"
          }
        }
      },
      "network_configuration": {
        "type": "object",
        "description": "A network configuration element",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the network"
          },
          "reachable": {
            "type": "array",
            "description": "Networks reachable from this network",
            "items": {
              "type": "string"
            }
          },
          "preferred_vpn": {
            "type": "array",
            "description": "VPN gateways to use (in order) to connect to this network",
            "items": {
              "type": "string"
            }
          },
          "subnet": {
            "type": "string",
            "description": "Subnet of this network"
          }
        }
      }
    }
  },
  "paths": {
    "/auth": {
      "summary": "Manages authentication towards this service",
      "description": "Endpoint to manage authentication tokens",
      "post": {
        "tags": ["Authentication"],
        "description": "Issues a new authentication token in exchange for credentials. Currently requires no credentials, this is up to future implementations.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "The authentication token as string",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Wrong credentials were specified"
          }
        }
      }
    },
    "/configuration": {
      "summary": "Manages the configuration of this service",
      "description": "Endpoint to manage service configuration",
      "get": {
        "tags": ["Configuration"],
        "description": "Fetch the current configuration of this service",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain_configuration"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": ["Configuration"],
        "description": "Installs a new configuration for this service",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The configuration to install. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/domain_configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The configuration has been installed"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "406": {
            "description": "A value exceeds the allowed range"
          },
          "409": {
            "description": "There are slices currently running. Reconfiguring is not supported while slices are open."
          },
          "412": {
            "description": "The provided configuration is invalid"
          }
        }
      }
    },
    "/tunnel_reservation": {
      "summary": "Manages tunnel reservations on the current domain",
      "description": "Endpoint to manage tunnel reservations",
      "get": {
        "tags": ["Tunnel Reservation"],
        "description": "Lists all current tunnel reservations",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnel reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": ["Tunnel Reservation"],
        "description": "Creates a new tunnel reservation or stages changes to an existing deployed tunnel, as long as source and target of the tunnel match.",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The tunnel to reserve. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tunnel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tunnel has been reserved"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The input or output could not be found"
          },
          "406": {
            "description": "A value exceeds the allowed range"
          },
          "409": {
            "description": "A tunnel with this id is already known and does not match current source and target"
          },
          "412": {
            "description": "A value does not match the schema"
          },
          "507": {
            "description": "Insufficient resources"
          }
        }
      },
      "delete": {
        "tags": ["Tunnel Reservation"],
        "description": "Deletes a tunnel reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel reservation to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel reservation was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          }
        }
      }
    },
    "/tunnel_deployment": {
      "summary": "Manages tunnels on the current domain",
      "description": "Endpoint to manage tunnels",
      "get": {
        "tags": ["Tunnel Management"],
        "description": "Lists all current tunnels",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": ["Tunnel Management"],
        "description": "Creates a new tunnel or modifies a tunnel from a reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The tunnel to create from the corresponding reservation id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel has been created"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      },
      "delete": {
        "tags": ["Tunnel Management"],
        "description": "Deletes a tunnel",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel could not be found."
          },
          "412": {
            "description": "The tunnel is still being referenced by a deployed slice"
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      }
    }
  }
}
