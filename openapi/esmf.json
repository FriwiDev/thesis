{
  "openapi": "3.0.3",
  "info": {
    "title": "ESMF",
    "description": "A simple API to interact with the Edge Slice Management Function. Supports creating and removing slices across domains. Synchronises itself with other ESMFs to achieve a common goal. Please refer to the topology drawings for further information about the network structures.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{protocol}://{apiRoot}/v1",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "apiRoot": {
          "default": "localhost:8080",
          "description": "The server to use"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "slice": {
        "type": "object",
        "properties": {
          "slice_id": {
            "type": "integer",
            "format": "int32",
            "description": "The slice identifier"
          },
          "min_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The minimum transmission rate as bits/s"
          },
          "max_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum transmission rate as bits/s"
          },
          "burst_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The burst transmission rate as bits/s"
          },
          "latency": {
            "type": "integer",
            "format": "int16",
            "description": "The required maximum latency"
          },
          "tunnel_id": {
            "type": "integer",
            "format": "int32",
            "description": "The tunnel identifier"
          },
          "transport_protocol": {
            "type": "string",
            "enum": [
              "UDP",
              "TCP"
            ],
            "description": "The protocol to be expected"
          },
          "fr": {
            "$ref": "#/components/schemas/endpoint"
          },
          "to": {
            "$ref": "#/components/schemas/endpoint"
          }
        }
      },
      "tunnel": {
        "type": "object",
        "properties": {
          "tunnel_id": {
            "type": "integer",
            "format": "int32",
            "description": "The tunnel identifier"
          },
          "min_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The minimum transmission rate as bits/s"
          },
          "max_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum transmission rate as bits/s"
          },
          "burst_rate": {
            "type": "integer",
            "format": "int64",
            "description": "The burst transmission rate as bits/s"
          },
          "latency": {
            "type": "integer",
            "format": "int16",
            "description": "The required maximum latency"
          },
          "fr": {
            "$ref": "#/components/schemas/endpoint"
          },
          "to": {
            "$ref": "#/components/schemas/endpoint"
          },
          "private_key": {
            "type": "string",
            "description": "The tunnel private key"
          },
          "public_key": {
            "type": "string",
            "description": "The tunnel public key (of the other side)"
          }
        }
      },
      "endpoint": {
        "type": "object",
        "description": "Specifying an endpoint to be matched for source or target",
        "properties": {
          "ip": {
            "type": "string",
            "description": "Specifies the source or target ip to be matched. Leave empty for no matching.",
            "default": null
          },
          "port": {
            "type": "integer",
            "format": "i16",
            "description": "Specifies the source or target port to be matched. Leave empty or on 0 for no matching.",
            "default": 0
          },
          "name": {
            "type": "string",
            "description": "Specifies the name of this entry to look up in our configuration.",
            "default": null
          },
          "network": {
            "type": "string",
            "description": "Specifies the network name of this endpoint.",
            "default": null
          }
        }
      },
      "domain_configuration": {
        "type": "object",
        "description": "The configuration for this service",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ESMF",
              "CTMF"
            ],
            "description": "The service type to be used"
          },
          "network": {
            "type": "string",
            "description": "Our network name"
          },
          "vpn_gateways": {
            "type": "array",
            "description": "The vpn gateways known to us",
            "items": {
              "$ref": "#/components/schemas/device_configuration"
            }
          },
          "networks": {
            "type": "array",
            "description": "The other networks known to us",
            "items": {
              "$ref": "#/components/schemas/network_configuration"
            }
          },
          "coordinators": {
            "type": "array",
            "description": "A list of the other ESMF/CTMF services",
            "items": {
              "$ref": "#/components/schemas/device_configuration"
            }
          },
          "domain_controller": {
            "$ref": "#/components/schemas/device_configuration"
          },
          "reservable_bitrate": {
            "type": "integer",
            "format": "i64",
            "description": "The bitrate that can be reserved by hosts on our network",
            "default": 1000000000
          },
          "slice_id_range": {
            "type": "object",
            "description": "The range of slice ids that are assigned by this service",
            "properties": {
              "fr": {
                "type": "integer",
                "description": "Lower bound of this range (inclusive)",
                "format": "i16"
              },
              "to": {
                "type": "integer",
                "description": "Higher bound of this range (exclusive)",
                "format": "i16"
              }
            }
          },
          "tunnel_id_range": {
            "type": "object",
            "description": "The range of tunnel ids that are assigned by this service",
            "properties": {
              "fr": {
                "type": "integer",
                "description": "Lower bound of this range (inclusive)",
                "format": "i16"
              },
              "to": {
                "type": "integer",
                "description": "Higher bound of this range (exclusive)",
                "format": "i16"
              }
            }
          }
        }
      },
      "device_configuration": {
        "type": "object",
        "description": "A device/switch configuration element",
        "properties": {
          "ip": {
            "type": "string",
            "description": "The ip or name the device can be reached on",
            "default": "localhost"
          },
          "port": {
            "type": "integer",
            "format": "i16",
            "description": "The port that the device REST API can be reached on",
            "default": 8082
          },
          "connections": {
            "type": "array",
            "description": "The (relevant) interface definitions for this device",
            "items": {
              "$ref": "#/components/schemas/connection_configuration"
            }
          },
          "network": {
            "type": "string",
            "description": "The network name this device is assigned to"
          },
          "name": {
            "type": "string",
            "description": "The name of the device"
          }
        }
      },
      "connection_configuration": {
        "type": "object",
        "description": "A connection configuration element",
        "properties": {
          "intf_name": {
            "type": "string",
            "description": "The name of the interface on a switch"
          },
          "intf_id": {
            "type": "integer",
            "format": "i16",
            "description": "The id of the interface"
          },
          "other_end": {
            "type": "string",
            "description": "The name of the device on the other side"
          }
        }
      },
      "network_configuration": {
        "type": "object",
        "description": "A network configuration element",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the network"
          },
          "reachable": {
            "type": "array",
            "description": "Networks reachable from this network",
            "items": {
              "type": "string"
            }
          },
          "preferred_vpn": {
            "type": "array",
            "description": "VPN gateways to use (in order) to connect to this network",
            "items": {
              "type": "string"
            }
          },
          "subnet": {
            "type": "string",
            "description": "Subnet of this network"
          }
        }
      }
    }
  },
  "paths": {
    "/auth": {
      "summary": "Manages authentication towards this service",
      "description": "Endpoint to manage authentication tokens",
      "post": {
        "tags": ["Authentication"],
        "description": "Issues a new authentication token in exchange for credentials. Currently requires no credentials, this is up to future implementations.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "The authentication token as string",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Wrong credentials were specified"
          }
        }
      }
    },
    "/slice": {
      "summary": "Manages slices for requesters",
      "description": "Endpoint to manage slices by requesters",
      "get": {
        "tags": ["Slice Management"],
        "description": "Lists all current slices by this requester",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of slices assigned to this requester",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/slice"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          }
        }
      },
      "put": {
        "tags": ["Slice Management"],
        "description": "Creates one or multiple new slices from one host to another. Will either create all slices if feasible or none at all.",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slices",
            "in": "query",
            "description": "The slices to reserve. The service will set the slice ids.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/slice"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slices have been deployed. Returns the parameters of the deployed slices, including the fresh ids.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/slice"
                }
              }
            }
          },
          "403": {
            "description": "Invalid or insufficient authentication provided"
          },
          "404": {
            "description": "The input or output of one or multiple of the slices could not be found"
          },
          "417": {
            "description": "No slices were requested"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "422": {
            "description": "Can not handle slices not originating from or to our network"
          },
          "500": {
            "description": "Internal error"
          },
          "507": {
            "description": "Insufficient resources by participating domain or requester"
          }
        }
      },
      "delete": {
        "tags": ["Slice Management"],
        "description": "Deletes one or multiple slices",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slice_ids",
            "in": "query",
            "description": "The ids of the slices to be deleted.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slices were successfully deleted."
          },
          "403": {
            "description": "Invalid or insufficient authentication provided."
          },
          "404": {
            "description": "One or multiple of the slices could not be found."
          },
          "417": {
            "description": "No slice ids were provided."
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/configuration": {
      "summary": "Manages the configuration of this service",
      "description": "Endpoint to manage service configuration",
      "get": {
        "tags": [
          "Configuration"
        ],
        "description": "Fetch the current configuration of this service",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain_configuration"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "description": "Installs a new configuration for this service",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The configuration to install. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/domain_configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The configuration has been installed"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "406": {
            "description": "A value exceeds the allowed range"
          },
          "409": {
            "description": "There are slices currently running. Reconfiguring is not supported while slices are open."
          },
          "412": {
            "description": "The provided configuration is invalid"
          }
        }
      }
    },
    "/slice_reservation": {
      "summary": "Manages slice reservations on the current domain",
      "description": "Endpoint to manage slice reservations",
      "get": {
        "tags": [
          "Slice Synchronization"
        ],
        "description": "Lists all current slice reservations",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of slice reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/slice"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          }
        }
      },
      "put": {
        "tags": [
          "Slice Synchronization"
        ],
        "description": "Creates a new slice reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The slice to reserve. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/slice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The slice has been reserved"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The input or output could not be found"
          },
          "406": {
            "description": "A value exceeds the allowed range"
          },
          "409": {
            "description": "A slice with this id is already known"
          },
          "412": {
            "description": "A value does not match the schema"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "500": {
            "description": "Internal error"
          },
          "507": {
            "description": "Insufficient resources"
          }
        }
      },
      "delete": {
        "tags": ["Slice Synchronization"],
        "description": "Deletes a slice reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slice_id",
            "in": "query",
            "description": "The id of the slice reservation to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slice reservation was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The slice reservation could not be found."
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/slice_deployment": {
      "summary": "Manages slices on the current domain",
      "description": "Endpoint to manage slices",
      "get": {
        "tags": [
          "Slice Synchronization"
        ],
        "description": "Lists all current slices",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of slices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/slice"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          }
        }
      },
      "put": {
        "tags": [
          "Slice Synchronization"
        ],
        "description": "Creates a new slice from a reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slice_id",
            "in": "query",
            "description": "The slice to create from the corresponding reservation id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slice has been created"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The slice reservation could not be found."
          },
          "412": {
            "description": "The tunnel referenced by this slice has not been deployed yet"
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      },
      "delete": {
        "tags": [
          "Slice Synchronization"
        ],
        "description": "Deletes a slice",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slice_id",
            "in": "query",
            "description": "The id of the slice to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The slice was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The slice could not be found."
          },
          "421": {
            "description": "Slice management is not supported by this service"
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      }
    },
    "/tunnel_reservation": {
      "summary": "Manages tunnel reservations on the current domain",
      "description": "Endpoint to manage tunnel reservations",
      "get": {
        "tags": [
          "Tunnel Synchronization"
        ],
        "description": "Lists all current tunnel reservations",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnel reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": [
          "Tunnel Synchronization"
        ],
        "description": "Creates a new tunnel reservation or stages changes to an existing deployed tunnel, as long as source and target of the tunnel match.",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The tunnel to reserve. Will check for issues.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tunnel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tunnel has been reserved"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The input or output could not be found"
          },
          "406": {
            "description": "A value exceeds the allowed range"
          },
          "409": {
            "description": "A tunnel with this id is already known and does not match current source and target"
          },
          "412": {
            "description": "A value does not match the schema"
          },
          "500": {
            "description": "Internal error"
          },
          "507": {
            "description": "Insufficient resources"
          }
        }
      },
      "delete": {
        "tags": ["Tunnel Synchronization"],
        "description": "Deletes a tunnel reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel reservation to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel reservation was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/tunnel_deployment": {
      "summary": "Manages tunnels on the current domain",
      "description": "Endpoint to manage tunnels",
      "get": {
        "tags": [
          "Tunnel Synchronization"
        ],
        "description": "Lists all current tunnels",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current list of tunnels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tunnel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid authentication provided"
          }
        }
      },
      "put": {
        "tags": [
          "Tunnel Synchronization"
        ],
        "description": "Creates a new tunnel or modifies a tunnel from a reservation",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The tunnel to create from the corresponding reservation id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel has been created"
          },
          "403": {
            "description": "Invalid authentication provided"
          },
          "404": {
            "description": "The tunnel reservation could not be found."
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      },
      "delete": {
        "tags": [
          "Tunnel Synchronization"
        ],
        "description": "Deletes a tunnel",
        "parameters": [
          {
            "name": "auth",
            "in": "query",
            "description": "The authentication token issued by prior login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "description": "The id of the tunnel to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tunnel was successfully deleted."
          },
          "403": {
            "description": "Invalid authentication provided."
          },
          "404": {
            "description": "The tunnel could not be found."
          },
          "412": {
            "description": "The tunnel is still being referenced by a deployed slice"
          },
          "500": {
            "description": "The deployment to the network failed"
          }
        }
      }
    }
  }
}
