# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from dsmf_server.models.base_model_ import Model
from dsmf_server import util


class ControllerConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip: str='localhost', port: int=8080, name: str=None):
        """ControllerConfiguration - a model defined in OpenAPI

        :param ip: The ip of this ControllerConfiguration.
        :param port: The port of this ControllerConfiguration.
        :param name: The name of this ControllerConfiguration.
        """
        self.openapi_types = {
            'ip': str,
            'port': int,
            'name': str
        }

        self.attribute_map = {
            'ip': 'ip',
            'port': 'port',
            'name': 'name'
        }

        self._ip = ip
        self._port = port
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllerConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controller_configuration of this ControllerConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip(self):
        """Gets the ip of this ControllerConfiguration.

        The ip or name the controller can be reached on

        :return: The ip of this ControllerConfiguration.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this ControllerConfiguration.

        The ip or name the controller can be reached on

        :param ip: The ip of this ControllerConfiguration.
        :type ip: str
        """

        self._ip = ip

    @property
    def port(self):
        """Gets the port of this ControllerConfiguration.

        The port that the controller REST API can be reached on

        :return: The port of this ControllerConfiguration.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ControllerConfiguration.

        The port that the controller REST API can be reached on

        :param port: The port of this ControllerConfiguration.
        :type port: int
        """

        self._port = port

    @property
    def name(self):
        """Gets the name of this ControllerConfiguration.

        The name of this controller

        :return: The name of this ControllerConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ControllerConfiguration.

        The name of this controller

        :param name: The name of this ControllerConfiguration.
        :type name: str
        """

        self._name = name
