# coding: utf-8

from switch_server import util
from switch_server.models.base_model_ import Model


class Queue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int = None, rate: int = None, port: str = None):
        """Queue - a model defined in OpenAPI

        :param id: The id of this Queue.
        :param rate: The rate of this Queue.
        :param port: The port of this Queue.
        """
        self.openapi_types = {
            'id': int,
            'rate': int,
            'port': str
        }

        self.attribute_map = {
            'id': 'id',
            'rate': 'rate',
            'port': 'port'
        }

        self._id = id
        self._rate = rate
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Queue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queue of this Queue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Queue.

        The queue identifier used by OpenFlow

        :return: The id of this Queue.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Queue.

        The queue identifier used by OpenFlow

        :param id: The id of this Queue.
        :type id: int
        """

        self._id = id

    @property
    def rate(self):
        """Gets the rate of this Queue.

        The queue rate as bits/s

        :return: The rate of this Queue.
        :rtype: int
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this Queue.

        The queue rate as bits/s

        :param rate: The rate of this Queue.
        :type rate: int
        """

        self._rate = rate

    @property
    def port(self):
        """Gets the port of this Queue.

        The name of the output port on the switch

        :return: The port of this Queue.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this Queue.

        The name of the output port on the switch

        :param port: The port of this Queue.
        :type port: str
        """

        self._port = port
