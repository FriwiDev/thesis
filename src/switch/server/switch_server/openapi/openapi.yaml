openapi: 3.0.3
info:
  description: A simple API to manage QoS queues and traffic shaping on arbitrary
    OpenFlow switches. Does not support listing queues (GET) because this is already
    part of OpenFlow.
  title: Switch QoS API
  version: 1.0.0
servers:
- url: "{protocol}://{apiRoot}/v1"
  variables:
    protocol:
      default: http
      enum:
      - http
      - https
    apiRoot:
      default: localhost:8082
      description: The server to use
paths:
  /auth:
    description: Endpoint to manage authentication tokens
    post:
      description: "Issues a new authentication token in exchange for credentials.\
        \ Currently requires no credentials, this is up to future implementations."
      operationId: auth_post
      parameters: []
      responses:
        "200":
          content:
           text/plain:
              schema:
                type: string
          description: The authentication token as string
        "403":
          description: Wrong credentials were specified
      tags:
      - Authentication
      x-openapi-router-controller: switch_server.controllers.authentication_controller
    summary: Manages authentication towards this service
  /policy:
    description: Endpoint to manage traffic policies
    put:
      description: Sets the policies on the specified port
      operationId: policy_put
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      - description: The switch port name to modify.
        explode: true
        in: query
        name: port
        required: true
        schema:
          type: string
        style: form
      - description: The ingress policing rate to use in Bits/s. Set to 0 to reset/delete.
        explode: true
        in: query
        name: ingress_policing_rate
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The ingress policing burst to use in Bits/s. Set to 0 to reset/delete.
        explode: true
        in: query
        name: ingress_policing_burst
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          description: Traffic policy updated
        "403":
          description: Invalid authentication provided
        "404":
          description: The switch port could not be found
        "406":
          description: A value exceeds the allowed range
      tags:
      - Traffic shaping
      x-openapi-router-controller: switch_server.controllers.traffic_shaping_controller
    summary: Manages traffic policies on the OpenFlow switch
  /queue:
    delete:
      description: Deletes a queue
      operationId: queue_delete
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      - description: The id of the queue to be deleted.
        explode: true
        in: query
        name: queue_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The switch port of the queue to be deleted.
        explode: true
        in: query
        name: port
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: The queue was successfully deleted.
        "403":
          description: Invalid authentication provided.
        "404":
          description: The queue could not be found.
      tags:
      - Queue Management
      x-openapi-router-controller: switch_server.controllers.queue_management_controller
    description: Endpoint to manage queues
    put:
      description: Creates a new queue
      operationId: queue_put
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queue'
        description: The queue to create. The id will be set by the service.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue'
          description: The queue object
        "400":
          description: No body provided.
        "403":
          description: Invalid authentication provided.
        "404":
          description: The switch port could not be found
        "406":
          description: A value exceeds the allowed range
        "507":
          description: Already too many queues in use
      tags:
      - Queue Management
      x-openapi-router-controller: switch_server.controllers.queue_management_controller
      x-codegen-request-body-name: body
    summary: Manages queues on the OpenFlow switch
components:
  schemas:
    queue:
      example:
        port: port
        burst_rate: 5
        max_rate: 1
        priority: 5
        queue_id: 0
        min_rate: 6
      properties:
        queue_id:
          description: The queue identifier used by OpenFlow
          format: int32
          title: queue_id
          type: integer
        min_rate:
          description: The minimum queue rate in Bits/s
          format: int64
          title: min_rate
          type: integer
        max_rate:
          description: The maximum queue rate in Bits/s
          format: int64
          title: max_rate
          type: integer
        burst_rate:
          description: The burst queue rate in Bits/s
          format: int64
          title: burst_rate
          type: integer
        priority:
          description: The queue priority
          format: int32
          title: priority
          type: integer
        port:
          description: The name of the output port on the switch
          title: port
          type: string
      title: queue
      type: object
