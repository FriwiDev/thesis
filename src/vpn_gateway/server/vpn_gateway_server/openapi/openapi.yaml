openapi: 3.0.3
info:
  description: A simple API to manage tunnel entries on a dedicated host within the
    edges. The VPN Gateway is used to encrypt traffic before it enters the first black
    network.
  title: VPN Gateway API
  version: 1.0.0
servers:
- url: "{protocol}://{apiRoot}/v1"
  variables:
    protocol:
      default: http
      enum:
      - http
      - https
    apiRoot:
      default: localhost:8083
      description: The server to use
paths:
  /auth:
    description: Endpoint to manage authentication tokens
    post:
      description: "Issues a new authentication token in exchange for credentials.\
        \ Currently requires no credentials, this is up to future implementations."
      operationId: auth_post
      parameters: []
      responses:
        "200":
          content:
           application/json:
              schema:
                type: string
          description: The authentication token as string
        "403":
          description: Wrong credentials were specified
      tags:
      - Authentication
      x-openapi-router-controller: vpn_gateway_server.controllers.authentication_controller
    summary: Manages authentication towards this service
  /tunnel_entry:
    delete:
      description: Deletes a tunnel entry
      operationId: tunnel_entry_delete
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      - description: The id of the tunnel entry to be deleted.
        explode: true
        in: query
        name: tunnel_entry_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: The tunnel entry was successfully deleted.
        "403":
          description: Invalid authentication provided.
        "404":
          description: The tunnel entry could not be found.
      tags:
      - Tunnel Entry Management
      x-openapi-router-controller: vpn_gateway_server.controllers.tunnel_entry_management_controller
    description: Endpoint to manage tunnel entries
    get:
      description: Lists all current tunnel entries
      operationId: tunnel_entry_get
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tunnel_entry'
                type: array
          description: The current list of tunnel entries
        "403":
          description: Invalid authentication provided
      tags:
      - Tunnel Entry Management
      x-openapi-router-controller: vpn_gateway_server.controllers.tunnel_entry_management_controller
    put:
      description: Creates a new tunnel entry or updates one. Only updating of match
        entries is allowed - not the rest of the tunnel parameters.
      operationId: tunnel_entry_put
      parameters:
      - description: The authentication token issued by prior login
        explode: true
        in: query
        name: auth
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunnel_entry'
        description: The tunnel entry to create or update. The id will be inherited
          from the request.
        x-body-name: body
      responses:
        "201":
          description: The tunnel entry has been created
        "202":
          description: The tunnel entry has been updated
        "400":
          description: No body provided.
        "403":
          description: Invalid authentication provided.
        "404":
          description: A specified interface could not be found
        "406":
          description: A value exceeds the allowed range
        "409":
          description: A tunnel entry with this id already exists and information
            apart from match entries was changed.
        "412":
          description: A value does not match the schema
        "507":
          description: Already too many tunnel entries in use
      tags:
      - Tunnel Entry Management
      x-openapi-router-controller: vpn_gateway_server.controllers.tunnel_entry_management_controller
      x-codegen-request-body-name: body
    summary: Manages tunnel entries on the vpn gateway
components:
  schemas:
    tunnel_entry:
      example:
        public_key: public_key
        tunnel_entry_id: 0
        inner_subnet: inner_subnet
        remote_end: remote_end
        local_port: 6
        private_key: private_key
        matches:
        - target_port: 5
          target_ip: target_ip
          source_port: 1
          transport_protocol: UDP
          source_mac: source_mac
          source_ip: source_ip
        - target_port: 5
          target_ip: target_ip
          source_port: 1
          transport_protocol: UDP
          source_mac: source_mac
          source_ip: source_ip
      properties:
        tunnel_entry_id:
          description: The tunnel identifier
          format: int32
          title: tunnel_entry_id
          type: integer
        inner_subnet:
          description: The subnet to route towards the inner interface (aka. the edge
            network/device)
          title: inner_subnet
          type: string
        local_port:
          description: The local port to use to bind the tunnel
          format: uint16
          title: local_port
          type: integer
        remote_end:
          description: The remote address to contact as the other side of the tunnel
          title: remote_end
          type: string
        private_key:
          description: The private key to use for authentication of the tunnel to
            the other side
          title: private_key
          type: string
        public_key:
          description: The public key to use for authentication of the tunnel from
            the other side
          title: public_key
          type: string
        matches:
          description: A specification for which packets to transport through the
            tunnel
          items:
            $ref: '#/components/schemas/tunnel_entry_matches_inner'
          title: matches
          type: array
      title: tunnel_entry
      type: object
    tunnel_entry_matches_inner:
      description: A match entry specifying packets that should be routed through
        the tunnel
      example:
        target_port: 5
        target_ip: target_ip
        source_port: 1
        transport_protocol: UDP
        source_mac: source_mac
        source_ip: source_ip
      properties:
        transport_protocol:
          description: The protocol to be expected
          enum:
          - UDP
          - TCP
          title: transport_protocol
          type: string
        source_ip:
          description: Specifies the source ip to be matched. Leave empty for no matching.
          title: source_ip
          type: string
        target_ip:
          description: Specifies the target ip to be matched. Leave empty for no matching.
          title: target_ip
          type: string
        source_mac:
          description: Specifies the source mac to be matched. Leave empty for no
            matching.
          title: source_mac
          type: string
        source_port:
          default: 0
          description: Specifies the source port to be matched. Leave empty or on
            0 for no matching.
          format: i16
          title: source_port
          type: integer
        target_port:
          default: 0
          description: Specifies the target port to be matched. Leave empty or on
            0 for no matching.
          format: i16
          title: target_port
          type: integer
      title: tunnel_entry_matches_inner
      type: object
